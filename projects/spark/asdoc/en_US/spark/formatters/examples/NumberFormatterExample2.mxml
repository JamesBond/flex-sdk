<?xml version="1.0" encoding="utf-8"?>
<!-- Sample program for spark.formatters.NumberFormatter -->
<s:Application
    xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:mx="library://ns.adobe.com/flex/mx">

    <fx:Declarations>
        <s:NumberFormatter id="numberFormatter"/>
    </fx:Declarations>

    <mx:Form>
        <mx:FormItem label="Input Locale ID Name">
            <mx:HBox>
                <s:TextInput id="inputLocaleIDName"/>
                <!-- Upon button click, sets the locale style on the document
                    UI component. The formatter will inherit this style. -->
                <s:Button click="setStyle('locale', inputLocaleIDName.text);"
                          label="Apply"/>
            </mx:HBox>
            <mx:Text text="Example: 'en-US', 'fr-FR', 'ja-JP', 'ar-SA'"/>
        </mx:FormItem>
        <mx:FormItem label="Input Number">
            <s:TextInput id="inputNumber"/>
            <mx:Text text="Example: {numberFormatter.format(123456789.123)}"/>
        </mx:FormItem>
        <mx:FormItem label="Actual Locale ID Name">
            <mx:Text text="{numberFormatter.actualLocaleIDName}"/>
        </mx:FormItem>
        <mx:FormItem label="Parsed Result">
            <mx:Text
                text="{numberFormatter.parseNumber(inputNumber.text).toString()}"/>
        </mx:FormItem>
    </mx:Form>
</s:Application>
