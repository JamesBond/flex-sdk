<?xml version="1.0"?>
<!-- Simple example to demonstrate the DataGroup component -->
<FxApplication xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark">
    <s:Panel title="DataGroup Component Example" height="75%" width="75%" 
        layout="vertical" horizontalCenter="0" verticalCenter="0" 
        paddingTop="10" paddingBottom="10" paddingLeft="10" paddingRight="10">

        <fx:Script>
            <![CDATA[

                // need to import the item renderers
                import mx.skins.spark.FxDefaultItemRenderer;
                import mx.skins.spark.FxDefaultComplexItemRenderer;
                import mx.components.FxButton;

                public function customItemRendererFunction(item:*):IFactory{
                    if (item is FxButton)
                        return new ClassFactory(FxDefaultComplexItemRenderer);
                    else
                        return new ClassFactory(FxDefaultItemRenderer);
                }

            ]]>
        </fx:Script>

        <!-- a DataGroup can hold primitive data items if an 
             item renderer is defined -->

        <s:DataGroup itemRenderer="{new ClassFactory(FxDefaultItemRenderer)}">
            <s:layout><s:VerticalLayout gap="1" /></s:layout>
            <dataProvider>
                <ArrayCollection>
                    <String>primitive data 1</String>
                    <String>primitive data 2</String>
                    <String>primitive data 3</String>
                </ArrayCollection>
            </dataProvider>
        </s:DataGroup>

        <Spacer height="20" />

        <!-- an item renderer function can be defined in order to display 
             a mix of data and graphical items -->

        <s:DataGroup itemRendererFunction="customItemRendererFunction">
            <s:layout><s:HorizontalLayout gap="1" /></s:layout>
            <dataProvider>
                <ArrayCollection>
                    <FxButton label="Button 1" />
                    <String>primitive data string</String>
                    <FxButton label="Button 2" />
                </ArrayCollection>
            </dataProvider>
        </s:DataGroup>

    </s:Panel>
</FxApplication>