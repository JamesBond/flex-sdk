/*
////////////////////////////////////////////////////////////////////////////////
//
//  ADOBE SYSTEMS INCORPORATED
//  Copyright 2008 Adobe Systems Incorporated
//  All Rights Reserved.
//
//  NOTICE: Adobe permits you to use, modify, and distribute this file
//  in accordance with the terms of the license agreement accompanying it.
//
////////////////////////////////////////////////////////////////////////////////
*/

@namespace "library://ns.adobe.com/flex/spark";

/* Default Skins */

ActionBar
{
	color: #FFFFFF;
	chromeColor: #484848;
    skinClass: ClassReference("spark.skins.mobile.ActionBarSkin");
	textShadowAlpha: .65;
	textShadowColor: #000000;
}

ActionBar #titleDisplay
{
    fontSize: 28;
    fontWeight: bold;
}

ActionBar Group#navigationGroup Button
{
	skinClass: ClassReference("spark.skins.mobile.NavigationButtonSkin");
}

ActionBar Group#actionGroup Button
{
    skinClass: ClassReference("spark.skins.mobile.ActionButtonSkin");
}

Application
{
    backgroundColor: #FFFFFF;
    skinClass: ClassReference("spark.skins.spark.ApplicationSkin");
}

BorderContainer
{
    backgroundColor: #FFFFFF;
    borderStyle : "solid"; 
    cornerRadius: 0;
    skinClass: ClassReference("spark.skins.spark.BorderContainerSkin");
}

Button
{
    fontWeight: "bold";
    skinClass: ClassReference("spark.skins.mobile.ButtonSkin");
}

Button.emphasized
{
    skinClass: ClassReference("spark.skins.mobile.ButtonSkin");
}

ButtonBar
{
    skinClass: ClassReference("spark.skins.spark.ButtonBarSkin");
}

ButtonBase
{
    iconPlacement: "left";
}

CheckBox
{
    skinClass: ClassReference("spark.skins.mobile.CheckBoxSkin");
}

ComboBox
{
    dropShadowVisible: true;
    paddingBottom: 3;
    paddingLeft: 3;
    paddingRight: 3;
    paddingTop: 5;
    skinClass: ClassReference("spark.skins.spark.ComboBoxSkin");
}

DropDownList
{
    skinClass: ClassReference("spark.skins.spark.DropDownListSkin");
}

HScrollBar
{
    skinClass: ClassReference("spark.skins.mobile.HScrollBarSkin");
}

HSlider
{
    skinClass: ClassReference("spark.skins.mobile.HSliderSkin");
}

IconItemRenderer
{
	horizontalGap: 15;
	verticalGap: 15;
	font-weight: bold;
	iconDelay: 500;
	messageStyleName: "iconItemRendererMessageStyle";
}

.iconItemRendererMessageStyle
{
	font-weight: normal;
	font-size: 20;
	color: #333333;
}

LabelItemRenderer
{
	paddingBottom: 15;
	paddingLeft: 15;
	paddingRight: 15;
	paddingTop: 15;
	verticalAlign: "middle";
}

List
{
	skinClass: ClassReference("spark.skins.mobile.ListSkin");
    touchDelay: 100;
	contentBackgroundColor: #F0F0F0;
	borderColor: #000000;
	borderAlpha: 1;
}

MuteButton
{
    skinClass: ClassReference("spark.skins.spark.mediaClasses.normal.MuteButtonSkin");
}

NumericStepper
{
    skinClass: ClassReference("spark.skins.spark.NumericStepperSkin");
}

Panel
{
    backgroundColor: #FFFFFF;
    borderAlpha: 0.5;
    borderColor: 0;
    cornerRadius: 0;
    dropShadowVisible: true;
	skinClass: ClassReference("spark.skins.spark.PanelSkin");
}

RadioButton
{
    skinClass: ClassReference("spark.skins.mobile.RadioButtonSkin");
}

Scroller
{
    touchDelay: 100;
    skinClass: ClassReference("spark.skins.spark.ScrollerSkin");
}

ScrubBar
{
    skinClass: ClassReference("spark.skins.spark.mediaClasses.normal.ScrubBarSkin");
}

SkinnableDataContainer
{
    skinClass: ClassReference("spark.skins.spark.SkinnableDataContainerSkin");
}

SkinnableComponent
{
    errorSkin: ClassReference("spark.skins.spark.ErrorSkin");
    focusSkin: ClassReference("spark.skins.spark.FocusSkin");
}

SkinnableContainer
{
    backgroundColor: #FFFFFF;
    skinClass: ClassReference("spark.skins.mobile.SkinnableContainerSkin");
}

SkinnableTextBase:normalWithPrompt 
{
    color: #BABABA;
    fontStyle: normal;
}

SkinnableTextBase:disabledWithPrompt 
{
    color: #BABABA;
    fontStyle: normal;
}

Spinner
{
    skinClass: ClassReference("spark.skins.spark.SpinnerSkin");    
}

TabbedViewNavigatorApplication
{
    backgroundColor: #FFFFFF;
    skinClass: ClassReference("spark.skins.mobile.TabbedViewNavigatorApplicationSkin");
}

TabbedViewNavigator
{
    skinClass: ClassReference("spark.skins.mobile.TabbedViewNavigatorSkin");
}

TextBase
{
	contentBackgroundColor: #F0F0F0;
}

TextArea
{
    paddingBottom: 9;
    paddingLeft: 9;
    paddingRight: 9;
    paddingTop: 9;
	skinClass: ClassReference("spark.skins.mobile.TextAreaSkin");
}

TextInput
{
    paddingBottom: 9;
    paddingLeft: 9;
    paddingRight: 9;
    paddingTop: 9;
	skinClass: ClassReference("spark.skins.mobile.TextInputSkin");
}

TitleWindow
{
	borderAlpha: 0.8;
	borderColor: 0;
	cornerRadius: 0;
	dropShadowVisible: true;
	skinClass: ClassReference("spark.skins.spark.TitleWindowSkin");
}

ToggleButton
{
	skinClass: ClassReference("spark.skins.spark.ToggleButtonSkin");
}

VideoPlayer
{
    dropShadowVisible: true;
    skinClass: ClassReference("spark.skins.spark.VideoPlayerSkin");
}

View
{
    backgroundColor: #FFFFFF;
    skinClass: ClassReference("spark.skins.mobile.SkinnableContainerSkin");
}

ViewMenu
{
    skinClass: ClassReference("spark.skins.mobile.ViewMenuSkin");
}

ViewMenuItem
{ 
    iconPlacement : "top";
    chromeColor : #FFFFFF;
    paddingBottom: 8;
    paddingLeft: 8;
    paddingRight: 8;
    paddingTop: 8;
    skinClass : ClassReference("spark.skins.mobile.ViewMenuItemSkin");
    textAlign : "center";
    verticalAlign: "middle";
    verticalGap: 10;
}

ViewNavigator
{
    skinClass: ClassReference("spark.skins.mobile.ViewNavigatorSkin");
}

ViewNavigatorApplication
{
    backgroundColor: #FFFFFF;
    skinClass: ClassReference("spark.skins.mobile.ViewNavigatorApplicationSkin");
}

VolumeBar
{
    skinClass: ClassReference("spark.skins.spark.mediaClasses.normal.VolumeBarSkin");
}

VScrollBar
{
    skinClass: ClassReference("spark.skins.mobile.VScrollBarSkin");
}

VSlider
{
    skinClass: ClassReference("spark.skins.spark.VSliderSkin");
}

global
{
    /* framework styles */
    modalTransparency: 0;
    modalTransparencyBlur: 0;

    /* Looks */
    backgroundAlpha : 1;
    backgroundImageFillMode : "scale";
    borderVisible : true;
    borderWeight : 1;
    downColor: #A8C6EE; /* set in here and not in framework's default.css because it only is really applicable for touch interactions*/
    focusThickness: 3;
    symbolColor: #000000;
    fontLookup: "embeddedCFF";
    fontFamily: "_sans";
    fontSize: 24;
    color: #000000;
    textShadowColor: #FFFFFF;
    textShadowAlpha: .55;
    
    /* Behaviors */
    autoThumbVisibility: true;
    fixedThumbSize: false;
    fullScreenHideControlsDelay: 3000;
    interactionMode: "touch";
    liveDragging: true;
    rollOverOpenDelay: 200;
    slideDuration: 300;
    smoothScrolling: true;
    touchDelay: 0; /* default to 0 here, but Scroller sets it to 100 */
}
