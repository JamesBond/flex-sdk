<?xml version="1.0"?>
<project name="automation_spark" default="main" basedir=".">

	<property name="FLEX_HOME" location="${basedir}/../../.."/>
	<property file="${FLEX_HOME}/build.properties"/>
	<property name="local.playerglobal.version" value="10.0"/>
	<property name="locale" value="en_US"/>
	
	<macrodef name="bundle">
		<attribute name="locale"/>
		<sequential>
			<echo message="Compiling frameworks/locale/${locale}/automation_spark_rb.swc"/>
		<!-- Load the <compc> task. We can't do this at the <project> level -->
		<!-- because targets that run before flexTasks.jar gets built would fail. -->
		<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/lib/flexTasks.jar"/>
		<compc fork="true"
			   output="${FLEX_HOME}/frameworks/locale/@{locale}/automation_spark_rb.swc"
			   locale="@{locale}">
			<jvmarg line="${compc.jvm.args}"/>
			<target-player>10</target-player>
 			
			<include-namespaces/>
			<include-classes/>
			<source-path path-element="${basedir}/bundles/@{locale}"/>
			<include-libraries/>
			<library-path/>
            <external-library-path dir="${FLEX_HOME}/frameworks/libs">
                <include name="player/${local.playerglobal.version}/playerglobal.swc"/>
				<include name="framework.swc"/>
			</external-library-path>
		</compc>
		</sequential>
	</macrodef>	
	
	<macrodef name="fat-swc">
		<attribute name="locale"/>
		<sequential>
			<mkdir dir="${basedir}/bundles/@{locale}/docs" />
			<zip destfile="${FLEX_HOME}/frameworks/locale/@{locale}/automation_spark_rb.swc" update="true">
				<zipfileset dir="${basedir}/bundles/@{locale}/docs" prefix="docs">
					<include name="*.*"/>
				</zipfileset>
			</zip>
			<delete dir="${basedir}/bundles/@{locale}/docs" failonerror="false"/>
		</sequential>
	</macrodef>	

	<macrodef name="bundler">
		<attribute name="locale"/>
		<sequential>
			<bundle locale="@{locale}"/>
			<fat-swc locale="@{locale}"/>
		</sequential>
	</macrodef>
	
	<target name="main" depends="clean,compile" description="Clean build of automation_spark.swc and en_US">
		<!--<bundle locale="${locale}"/>-->
	</target>
	
	<!--<target name="other.locales" depends="bundles-clean,bundles" description="Build other locale SWCs"/>-->
	
	<!-- This is a private target for building automation_flashflexkit_rb.swc for various locales. -->
	<!-- The targets below set the 'locale' parameter and call it with <antcall>. -->
	<!--<target name="bundles">
		<bundler locale="da_DK"/>
		<bundler locale="de_DE"/>
		<bundler locale="en_US"/>
		<bundler locale="es_ES"/>
		<bundler locale="fi_FI"/>
		<bundler locale="fr_FR"/>
		<bundler locale="it_IT"/>
		<bundler locale="ja_JP"/>
		<bundler locale="ko_KR"/>
		<bundler locale="nb_NO"/>
		<bundler locale="nl_NL"/>
		<bundler locale="pt_BR"/>
		<bundler locale="ru_RU"/>
		<bundler locale="sv_SE"/>
		<bundler locale="zh_CN"/>
		<bundler locale="zh_TW"/>
	</target>-->
	
	<target name="compile" description="Compiles automation_spark.swc">
		<echo message="Compiling frameworks/libs/automation/automation_spark.swc"/>
		<!-- Load the <compc> task. We can't do this at the <project> level -->
		<!-- because targets that run before flexTasks.jar gets built would fail. -->
		<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/lib/flexTasks.jar"/>
		<!--
			Link in the classes (and their dependencies) for the MXML tags
			listed in this project's manifest.xml.
			Also link the additional classes (and their dependencies)
			listed in FrameworkClasses.as,
			because these aren't referenced by the manifest classes.
			Keep the standard metadata when compiling.
			Link in accessibility support.
			Include the appropriate CSS files and assets in the SWC.
			Don't include any resources in the SWC.
			Write a bundle list of referenced resource bundles
			into the file bundles.properties in this directory.
		-->
	
		<compc fork="true"
			   output="${FLEX_HOME}/frameworks/libs/automation/automation_spark.swc">
			<jvmarg line="${compc.jvm.args}"/>
			<namespace uri="library://ns.adobe.com/flex/spark" manifest="${basedir}/manifest_automation_spark.xml"/>
			<target-player>10</target-player>
			<include-classes>AutomationSparkClasses</include-classes>
			<source-path path-element="${basedir}/src"/>
			<source-path path-element="${FLEX_HOME}/frameworks/projects/automation/src"/>
			<library-path/>
            <external-library-path dir="${FLEX_HOME}/frameworks/libs">
                <include name="framework.swc"/>
				<include name="spark.swc"/>
                <include name="textLayout.swc"/>
				<include name="rpc.swc"/>
				<include name="osmf.swc"/>
				<include name="automation/automation.swc"/>
				<include name="automation_agent.swc"/>
				<include name="qtp.swc"/>
				<include name="qtp_air.swc"/>
				<include name="player/${local.playerglobal.version}/playerglobal.swc"/>
			</external-library-path>
			<locale/>
			<accessible>true</accessible>
		</compc>
	</target>
		
	<target name="doc" depends="clean-temp-docs" description="updates framework.swc with asdoc xml">
		<!-- Load the <asdoc> task. We can't do this at the <project> level -->
		<!-- because targets that run before flexTasks.jar gets built would fail. -->
		<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/lib/flexTasks.jar"/>

	    <condition property="asdoc.jvm.args" value="-Xmx384m">
	        <os family="windows"/>
	    </condition>

	    <condition property="asdoc.jvm.args" value="-Xmx512m">
	        <os family="mac"/>
	    </condition>

	    <condition property="asdoc.jvm.args" value="-Xmx512m">
	        <os family="unix"/>
	    </condition>

		<!-- Call asdoc to generate dita xml files -->
		<asdoc output="${FLEX_HOME}/tempDoc" lenient="true" failonerror="true" keep-xml="true" skip-xsl="true" fork="true">
		    <compiler.source-path path-element="${basedir}/src"/>
		    <doc-namespaces uri="library://ns.adobe.com/flex/spark"/>
		    <namespace uri="library://ns.adobe.com/flex/spark" manifest="${basedir}/manifest_automation_spark.xml"/>
		  <jvmarg line="${asdoc.jvm.args}"/>
		</asdoc>

		<!-- updates framework.swc with asdoc xml -->
		<zip destfile="${FLEX_HOME}/frameworks/libs/automation_spark.swc" update="true">
		    <zipfileset dir="${FLEX_HOME}/tempDoc/tempdita" prefix="docs">
			    <include name="*.*"/>
				<exclude name="ASDoc_Config.xml"/>
				<exclude name="overviews.xml"/>
		    </zipfileset>
		</zip>
	</target>

	<target name="clean">
		<delete failonerror="false">
			<fileset dir="${basedir}" >
				<include name="bundles.properties"/>
			</fileset>
			<fileset dir="${FLEX_HOME}/frameworks/libs/automation">
				<include name="automation_spark.swc"/>
				<include name="automation_spark.swc.incr"/>
			</fileset>
			<fileset dir="${FLEX_HOME}/frameworks/libs">
				<include name="automation_spark.swc"/>
				<include name="automation_spark.swc.incr"/>
			</fileset>
		</delete>
	</target>
	
	<target name="bundles-clean">
		<delete failonerror="false">
			<fileset dir="${FLEX_HOME}/frameworks/locale">
				<include name="*/automation_spark_rb.swc"/>
				<include name="*/automation_spark_rb.swc.incr"/>
			</fileset>
		</delete>
	</target>
	
	<target name="clean-temp-docs">
		<delete dir="${FLEX_HOME}/tempDoc" failonerror="false" includeEmptyDirs="true"/>
	</target>
	
</project>